 
from django.urls import path, include

from .views import ImageModelView

from rest_framework import routers 

# The routers will generate all the respective url for each object/list of all objects:
# For instance, if you perform a GET request from the url myurl.com/images, you expect 
# to see a json response of all the images. 

# Similarly, if you perform a POST request from the url myurl.com/images, you expect to
# be able to create a new image object    

# Also, if you go to myurl.com/images/<id>, you expect a json response of a single 
# object denoted by the id in the url. 

# Instead of doing all this explicity by giving regular expressions in url patterns and
# defining custom methods in views.py, DRF makes it easier for us to generate and deal with
# all these stuff (if we are doing it in the standard consistent way)


# So, I am gonna use routers.DefaultRouter() method from DRF to deal with this.

router  = routers.DefaultRouter()

router.register('images', ImageModelView) 
# The 1st argument here is the url endpoint
# The 2nd argument here is the actual view that the calling of the url will send the request to  


# All the necessary urls as talked earlier will be generated by the router and stored in
# "router.urls". Thus, you simply have to include it and we're all set. 

# Also, the router of DRF automatically creates a nice HTMl view for the requests and posts
# when you are requesting/posting using a browser. 

urlpatterns = [
    path('', include(router.urls))
]    

